/* tslint:disable */
/* eslint-disable */
/**
 * Dockops-board API specification
 * Dockops-board is an open source manager for docker containers with web UI
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';

/**
 * 
 * @export
 * @interface V1ContainerCreatePostRequest
 */
export interface V1ContainerCreatePostRequest {
    /**
     * 
     * @type {string}
     * @memberof V1ContainerCreatePostRequest
     */
    containerName: string;
    /**
     * 
     * @type {string}
     * @memberof V1ContainerCreatePostRequest
     */
    githubURL: string;
    /**
     * 
     * @type {string}
     * @memberof V1ContainerCreatePostRequest
     */
    dockerfileName?: string;
    /**
     * 
     * @type {string}
     * @memberof V1ContainerCreatePostRequest
     */
    hostPort?: string;
    /**
     * 
     * @type {string}
     * @memberof V1ContainerCreatePostRequest
     */
    containerPort?: string;
}

/**
 * Check if a given object implements the V1ContainerCreatePostRequest interface.
 */
export function instanceOfV1ContainerCreatePostRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "containerName" in value;
    isInstance = isInstance && "githubURL" in value;

    return isInstance;
}

export function V1ContainerCreatePostRequestFromJSON(json: any): V1ContainerCreatePostRequest {
    return V1ContainerCreatePostRequestFromJSONTyped(json, false);
}

export function V1ContainerCreatePostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ContainerCreatePostRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'containerName': json['containerName'],
        'githubURL': json['githubURL'],
        'dockerfileName': !exists(json, 'dockerfileName') ? undefined : json['dockerfileName'],
        'hostPort': !exists(json, 'hostPort') ? undefined : json['hostPort'],
        'containerPort': !exists(json, 'containerPort') ? undefined : json['containerPort'],
    };
}

export function V1ContainerCreatePostRequestToJSON(value?: V1ContainerCreatePostRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'containerName': value.containerName,
        'githubURL': value.githubURL,
        'dockerfileName': value.dockerfileName,
        'hostPort': value.hostPort,
        'containerPort': value.containerPort,
    };
}

